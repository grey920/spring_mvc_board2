<?xml version="1.0" encoding="UTF-8" ?>
<!-- SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Boards">
	<select id="count" resultType="int">
		select count(*) from board
	</select>

	<!-- 문법오류 1.where rnum >= #{start} ==> 해결법 where rnum <![CDATA[ >= ]]> #{start} 
		HTML 문서는 ' < ', ' . ' , ' > ' 와 같은 마크업 문자들을 파싱해서 읽어들이는 구조입니다. 그래서 마크업 문자들을 
		원래 대로의 의미로 사용하기 위해서 '&gt;', '&lt;', '&nbsp;' 등의 escape 문자열 (escape character)을 
		이용해야 하는데 문장이 길어지는 문제점이 발생하게 됩니다. 이럴떄 사용하는 것이 바로 CDATA절 입니다. 파서는 <![CDATA[ 
		와 ]]> 사이의 문장을 단순한 문자데이터로 인식하게 됩니다. 2. > : &gt; < : &lt; 바꾸어 보세요 -->
	<select id="list" parameterType="java.util.Map"
		resultType="board">
		select * from
		(select rownum rnum, b.*
		from
		(select * from board order by BOARD_RE_REF desc,
		BOARD_RE_SEQ asc) b
		)
		where rnum &gt; = #{start} and rnum &lt; = #{end}
	</select>
	
	<update id="ReadCountUpdate" parameterType="int">
		update board
		set BOARD_READCOUNT = BOARD_READCOUNT+1
		where BOARD_NUM = #{number}
	</update>

	<select id="Detail" resultType="board" parameterType="int">
		select * from board where BOARD_NUM = #{number}
	</select>

<!--   1. jdbcType=VARCHAR : 첨부 파일을 추가 하지 않은 경우 에러 처리 해줍니다.
			해당 필드가 null인 경우 jdbcType=VARCHAR로 처리하면 null로 설정됩니다.
			(원래는 null이면 마이바티스에서 에러를 내뿜는다. null 에러 처리를 위해 jdbcType=VARCHAR를 추가한다)
			number타입일 경우에는 jdbcType=INTEGER
		2. 1) insert 전에 (order = "BEFORE")
				조회(select nvl(max(BOARD_NUM), 0)+1 from board) 합니다.
			2) 조회한 값을 keyProperty="BOARD_NUM"에서 설정한 대로
				"BOARD_NUM" 프로퍼티에 저장합니다.
			3) insert문의 #{BOARD_NUM}는 지금 구한 값을 BOARDBean에서 가져옵니다.
				(public String getBOARD_NUM() {return BOARD_NUM;})	

-->
	<insert id="insert" parameterType="board">
		<selectKey resultType="int" order="BEFORE"
			keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM), 0) + 1 from board
		</selectKey>
		insert into board
		(BOARD_NUM,
		 BOARD_NAME, BOARD_PASS, BOARD_SUBJECT,
		 BOARD_CONTENT, BOARD_FILE, BOARD_ORIGINAL, 
		 BOARD_RE_REF,
		 BOARD_RE_LEV,BOARD_RE_SEQ, BOARD_READCOUNT,
		 BOARD_DATE)
		 values
		 (#{BOARD_NUM},
		 #{BOARD_NAME}, #{BOARD_PASS}, #{BOARD_SUBJECT},
		 #{BOARD_CONTENT}, #{BOARD_FILE,  jdbcType=VARCHAR}, 
		 #{BOARD_ORIGINAL,  jdbcType=VARCHAR}, 
		#{BOARD_NUM},
		 #{ BOARD_RE_LEV},#{BOARD_RE_SEQ}, #{BOARD_READCOUNT},
		 sysdate)
	</insert>

	<select id="BoardWriter" parameterType="map" resultType="board"> <!--  map (소문자)는 java.util.Map의 별칭 -->
		select * from board where BOARD_NUM = #{num} and BOARD_PASS = #{pass}
	</select>
	
	<update id="modify" parameterType="board">
		update board
		set
			BOARD_SUBJECT = #{BOARD_SUBJECT},
			BOARD_CONTENT = #{BOARD_CONTENT},
			BOARD_FILE = #{BOARD_FILE, jdbcType=VARCHAR},
			BOARD_ORIGINAL = #{BOARD_ORIGINAL, jdbcType=VARCHAR}
		where BOARD_NUM = #{BOARD_NUM}
	</update>
	
	<!--  BOARD_FILE 필드 없어요 -->
	<insert id="reply_insert" parameterType="board" >
		<selectKey resultType="int" order="BEFORE"
			keyColumn="BOARD_NUM" keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM), 0) + 1 from board
		</selectKey>
		insert into board
		(BOARD_NUM, BOARD_NAME, BOARD_PASS, BOARD_SUBJECT,
		 BOARD_CONTENT, BOARD_RE_REF, BOARD_RE_LEV,BOARD_RE_SEQ, 
		 BOARD_READCOUNT, BOARD_DATE)
		 values (#{BOARD_NUM},
		 #{BOARD_NAME}, #{BOARD_PASS}, #{BOARD_SUBJECT},
		 #{BOARD_CONTENT}, #{BOARD_RE_REF}, #{ BOARD_RE_LEV},
		 #{BOARD_RE_SEQ}, #{BOARD_READCOUNT},sysdate)
	</insert>
	
	<update id="reply_update" parameterType="board">
		update board
		set BOARD_RE_SEQ = BOARD_RE_SEQ + 1 
		where BOARD_RE_REF = #{BOARD_RE_REF}
		and BOARD_RE_SEQ <![CDATA[>]]> #{BOARD_RE_SEQ}
	</update>

	<delete id="Boards.delete" parameterType="board">
	<![CDATA[	
	delete 
	from board
	where BOARD_RE_REF = #{BOARD_RE_REF}
	and BOARD_RE_LEV >= #{BOARD_RE_LEV}
	and BOARD_RE_SEQ <= (
																nvl((select min(BOARD_RE_SEQ)-1
																from BOARD
																where BOARD_RE_REF=#{BOARD_RE_REF}
																and BOARD_RE_LEV=#{BOARD_RE_LEV}
																and BOARD_RE_SEQ >#{BOARD_RE_SEQ}) , 
																(select max (BOARD_RE_SEQ)
																from BOARD
																where BOARD_RE_REF=#{BOARD_RE_REF} ))
										)
	]]>
	</delete>
</mapper>